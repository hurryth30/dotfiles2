# --------------------------------
# plogin
# --------------------------------
# プラグインマネージャ
set -g @plugin 'tmux-plugins/tpm'
# # いろんな最適設定がされる
# set -g @plugin 'tmux-plugins/tmux-sensible'
# システムが再起動してもセッション状態を保持
set -g @plugin 'tmux-plugins/tmux-resurrect'
# セッション復元や自動起動等を行う
set -g @plugin 'tmux-plugins/tmux-continuum'
# システムのクリップボードへコピー
set -g @plugin 'tmux-plugins/tmux-yank'
# 全てのプラグインの読み込み
run '~/.tmux/plugins/tpm/tpm'


# --------------------------------
# general
# --------------------------------

# prefix = Ctrl + g
set-option -g prefix C-g
unbind-key C-b
bind-key C-g send-prefix

# ターミナルのc-lコマンドを使えるようにする
bind-key C-l send-keys 'clear'

#マウス操作を有効にする
set-option -g mouse on

# --------------------------------
# copy
# --------------------------------

# コピーモードの入り方
# prefix + [

# コピーモードの抜け方
# q

# escキーのタイムラグ解消
set -s escape-time 0

# コピーモードでvimキーバインドを使う
setw -g mode-keys vi

# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection


# --------------------------------
# disp
# --------------------------------
# ステータスバーをトップに配置する
set-option -g status-position top

# 左右のステータスバーの長さを決定する
set-option -g status-left-length 90
set-option -g status-right-length 90

# #H => マシン名
# #P => ペイン番号

# 最左に表示させる項目
set-option -g status-left '#H:[#P] == #S =='

# 最右に表示する項目
set-option -g status-right '[%Y-%m-%d(%a) %H:%M]'

# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1

# センタライズ ( windos-statusの設定 )
set-option -g status-justify centre

# セッションの表示
bind -n M-a choose-tree       # session, window, pane 表示
bind -n M-e choose-session    # sessionだけ表示bind -n M-w choose-tree -w    # windowだけ表示


# --------------------------------
# window
# --------------------------------
# window の作成, 移動
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-j next-window
bind -n M-k previous-window

# session の作成, 移動
bind -n M-C new-session
bind -n M-l switch-client -n
bind -n M-h switch-client -p

# pane の分割
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"

# ウィンドウ間の移動
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R


# --------------------------------
# move
# --------------------------------

# vim-tmux-navigatorの設定 (Ctrl+hjklでウィンドウ間の移動を可能にする)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
